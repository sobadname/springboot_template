package com.tykj.template.web.dsyg;

import java.io.IOException;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.tykj.template.domain.dsyg.DsygItem;
import com.tykj.template.domain.dsyg.DsygPage;
import com.tykj.template.service.dsyg.DsygItemService;

@Controller
@RequestMapping(value = "/dsyg/item")
public class DsygItemController {

	@Autowired
	private DsygItemService itemService;

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String list(Model model) {
		List<DsygItem> items = itemService.getAllItem();
		model.addAttribute("lists", items);
		return "dsyg/itemList";
	}

	@GetMapping("/enable/{id}")
	public String enable(@PathVariable("id") long id, RedirectAttributes redirectAttributes) {
		itemService.enableItem(id);
		redirectAttributes.addAttribute("enable", "");
		return "redirect:/dsyg/item/list";
	}

	@GetMapping("/disable/{id}")
	public String disable(@PathVariable("id") long id, RedirectAttributes redirectAttributes) {
		itemService.disableItem(id);
		redirectAttributes.addAttribute("disable", "");
		return "redirect:/dsyg/item/list";
	}

	@GetMapping("/new")
	public String newForm(Model model) {
		model.addAttribute("catalogList", itemService.getAllCatalog());
		model.addAttribute("stageList", itemService.getAllStage());
		model.addAttribute("data", new DsygItem());
		return "dsyg/itemForm";
	}

	@GetMapping("/update/{id}")
	public String updateForm(@PathVariable("id") long id, Model model) {
		model.addAttribute("catalogList", itemService.getAllCatalog());
		model.addAttribute("stageList", itemService.getAllStage());
		model.addAttribute("data", itemService.getItemById(id));
		return "dsyg/itemForm";
	}

	@PostMapping("/save")
	public String save(@Valid DsygItem item,
			@RequestParam(name = "iconImage", required = false) MultipartFile iconImage,
			@RequestParam(name = "itemImage", required = false) MultipartFile[] itemImage,
			@RequestParam(name = "picId", required = false) long[] picId,
			@RequestParam(name = "picOrder", required = false) int[] picOrder, RedirectAttributes redirectAttributes)
			throws IOException {
		itemService.saveItem(item, iconImage, picId, itemImage, picOrder);
		redirectAttributes.addAttribute("save", "");
		return "redirect:/dsyg/item/list";
	}

	@PostMapping("/saveContentImage")
	@ResponseBody
	public String saveContentImage(@RequestParam(name = "file") MultipartFile file) throws IOException {
		return itemService.saveContentImage(file);
	}

	@GetMapping("/details/{id}")
	public String details(@PathVariable("id") long id, Model model) {
		model.addAttribute("data", itemService.getItemById(id));
		return "dsyg/itemDetails";
	}

	@GetMapping("/page")
	public String page(Model model) {
		List<DsygPage> index = itemService.getDsygPageByPage(1);
		if (index != null) {
			for (DsygPage p1 : index) {
				model.addAttribute("index_p" + p1.getPosition(), p1);
			}
		}
		List<DsygPage> next = itemService.getDsygPageByPage(2);
		if (next != null) {
			for (DsygPage p2 : next) {
				model.addAttribute("next_p" + p2.getPosition(), p2);
			}
		}
		model.addAttribute("itemList", itemService.getAllItem());
		return "dsyg/itemPage";
	}

	@PostMapping("/page/update")
	public String pageUpdateForm(@RequestParam("pageAndPosition") String pageAndPosition,@RequestParam("selectItem") long selectItem,
			RedirectAttributes redirectAttributes) {
		if(pageAndPosition!=null){
			String str[]=pageAndPosition.split(",");
			int page=Integer.parseInt(str[0]);
			int position=Integer.parseInt(str[1]);
			itemService.savePage(page, position, selectItem);
		}
		redirectAttributes.addAttribute("update", "");
		return "redirect:/dsyg/item/page";
	}

}
